// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_cal_Hes
NumericMatrix rcpp_cal_Hes(NumericVector XiM0, NumericMatrix Covariate, NumericVector parvec, int len, int XiM0_len);
RcppExport SEXP _LVHDR_rcpp_cal_Hes(SEXP XiM0SEXP, SEXP CovariateSEXP, SEXP parvecSEXP, SEXP lenSEXP, SEXP XiM0_lenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type XiM0(XiM0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Covariate(CovariateSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type parvec(parvecSEXP);
    Rcpp::traits::input_parameter< int >::type len(lenSEXP);
    Rcpp::traits::input_parameter< int >::type XiM0_len(XiM0_lenSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_cal_Hes(XiM0, Covariate, parvec, len, XiM0_len));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_cal_grad
NumericVector rcpp_cal_grad(NumericVector yvec, NumericVector XiM0, NumericMatrix Covariate, int len, int parlen);
RcppExport SEXP _LVHDR_rcpp_cal_grad(SEXP yvecSEXP, SEXP XiM0SEXP, SEXP CovariateSEXP, SEXP lenSEXP, SEXP parlenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type yvec(yvecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type XiM0(XiM0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Covariate(CovariateSEXP);
    Rcpp::traits::input_parameter< int >::type len(lenSEXP);
    Rcpp::traits::input_parameter< int >::type parlen(parlenSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_cal_grad(yvec, XiM0, Covariate, len, parlen));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_objpar_prep
double rcpp_objpar_prep(NumericVector XiM, NumericVector yvec, int len);
RcppExport SEXP _LVHDR_rcpp_objpar_prep(SEXP XiMSEXP, SEXP yvecSEXP, SEXP lenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type XiM(XiMSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type yvec(yvecSEXP);
    Rcpp::traits::input_parameter< int >::type len(lenSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_objpar_prep(XiM, yvec, len));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_xi_func
NumericVector rcpp_xi_func(NumericVector x);
RcppExport SEXP _LVHDR_rcpp_xi_func(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_xi_func(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_objprep
double rcpp_objprep(LogicalMatrix Ymatlog, IntegerMatrix R, NumericMatrix tU, NumericMatrix Theta, NumericMatrix XZmat, int N, int J, int P, int K, int Tp);
RcppExport SEXP _LVHDR_rcpp_objprep(SEXP YmatlogSEXP, SEXP RSEXP, SEXP tUSEXP, SEXP ThetaSEXP, SEXP XZmatSEXP, SEXP NSEXP, SEXP JSEXP, SEXP PSEXP, SEXP KSEXP, SEXP TpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalMatrix >::type Ymatlog(YmatlogSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type R(RSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tU(tUSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Theta(ThetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type XZmat(XZmatSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type J(JSEXP);
    Rcpp::traits::input_parameter< int >::type P(PSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type Tp(TpSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_objprep(Ymatlog, R, tU, Theta, XZmat, N, J, P, K, Tp));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_getEforjEujXiM0
List rcpp_getEforjEujXiM0(NumericVector uj, IntegerVector indices_R, IntegerVector lengths_R, NumericMatrix Theta, NumericMatrix XZmat, int N, int Tp, int K, int P, int ujlen);
RcppExport SEXP _LVHDR_rcpp_getEforjEujXiM0(SEXP ujSEXP, SEXP indices_RSEXP, SEXP lengths_RSEXP, SEXP ThetaSEXP, SEXP XZmatSEXP, SEXP NSEXP, SEXP TpSEXP, SEXP KSEXP, SEXP PSEXP, SEXP ujlenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type uj(ujSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type indices_R(indices_RSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type lengths_R(lengths_RSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Theta(ThetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type XZmat(XZmatSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type Tp(TpSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type P(PSEXP);
    Rcpp::traits::input_parameter< int >::type ujlen(ujlenSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_getEforjEujXiM0(uj, indices_R, lengths_R, Theta, XZmat, N, Tp, K, P, ujlen));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_proj_func
NumericVector rcpp_proj_func(NumericVector out, int K);
RcppExport SEXP _LVHDR_rcpp_proj_func(SEXP outSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type out(outSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_proj_func(out, K));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_getnewpar_func
NumericVector rcpp_getnewpar_func(NumericVector XiM0, NumericVector yvec, int len, NumericVector grad, NumericVector drt, NumericVector oldpar, NumericMatrix Covariates, NumericVector tooff);
RcppExport SEXP _LVHDR_rcpp_getnewpar_func(SEXP XiM0SEXP, SEXP yvecSEXP, SEXP lenSEXP, SEXP gradSEXP, SEXP drtSEXP, SEXP oldparSEXP, SEXP CovariatesSEXP, SEXP tooffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type XiM0(XiM0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type yvec(yvecSEXP);
    Rcpp::traits::input_parameter< int >::type len(lenSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grad(gradSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drt(drtSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type oldpar(oldparSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Covariates(CovariatesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tooff(tooffSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_getnewpar_func(XiM0, yvec, len, grad, drt, oldpar, Covariates, tooff));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_BetagetEforj
List rcpp_BetagetEforj(IntegerVector indices_R, IntegerVector lengths_R, NumericMatrix XZmat, int N, int Tp, int P);
RcppExport SEXP _LVHDR_rcpp_BetagetEforj(SEXP indices_RSEXP, SEXP lengths_RSEXP, SEXP XZmatSEXP, SEXP NSEXP, SEXP TpSEXP, SEXP PSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type indices_R(indices_RSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type lengths_R(lengths_RSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type XZmat(XZmatSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type Tp(TpSEXP);
    Rcpp::traits::input_parameter< int >::type P(PSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_BetagetEforj(indices_R, lengths_R, XZmat, N, Tp, P));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_LVHDR_rcpp_cal_Hes", (DL_FUNC) &_LVHDR_rcpp_cal_Hes, 5},
    {"_LVHDR_rcpp_cal_grad", (DL_FUNC) &_LVHDR_rcpp_cal_grad, 5},
    {"_LVHDR_rcpp_objpar_prep", (DL_FUNC) &_LVHDR_rcpp_objpar_prep, 3},
    {"_LVHDR_rcpp_xi_func", (DL_FUNC) &_LVHDR_rcpp_xi_func, 1},
    {"_LVHDR_rcpp_objprep", (DL_FUNC) &_LVHDR_rcpp_objprep, 10},
    {"_LVHDR_rcpp_getEforjEujXiM0", (DL_FUNC) &_LVHDR_rcpp_getEforjEujXiM0, 10},
    {"_LVHDR_rcpp_proj_func", (DL_FUNC) &_LVHDR_rcpp_proj_func, 2},
    {"_LVHDR_rcpp_getnewpar_func", (DL_FUNC) &_LVHDR_rcpp_getnewpar_func, 8},
    {"_LVHDR_rcpp_BetagetEforj", (DL_FUNC) &_LVHDR_rcpp_BetagetEforj, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_LVHDR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
